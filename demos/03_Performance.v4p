<!DOCTYPE PATCH  SYSTEM "http://vvvv.org/versions/vvvv50beta37.dtd" >
   <PATCH nodename="D:\develop\VVVV.Struct\demos\03_Performance.v4p" systemname="03_Performance" filename="D:\develop\VVVV.Struct\demos\03_Performance.v4p" scrollx="10" scrolly="-360">
   <BOUNDS type="Window" left="0" top="0" width="9270" height="11880">
   </BOUNDS>
   <NODE nodename="IOBox (String)" componentmode="InABox" id="3" systemname="IOBox (String)">
   <BOUNDS type="Node" left="208" top="208" width="4760" height="424">
   </BOUNDS>
   <BOUNDS type="Box" left="208" top="208" width="4760" height="424">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="1" visible="0" values="|Struct Performance|">
   </PIN>
   <PIN pinname="Output String" slicecount="1" visible="0" values="||">
   </PIN>
   <PIN pinname="Size" slicecount="1" visible="1" values="14">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (String)" componentmode="InABox" id="2" systemname="IOBox (String)">
   <BOUNDS type="Node" left="208" top="616" width="4760" height="560">
   </BOUNDS>
   <BOUNDS type="Box" left="208" top="616" width="6430" height="310">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="1" visible="0" values="|because performance, tidiness and reusability matter|">
   </PIN>
   <PIN pinname="Output String" slicecount="1" visible="0" values="||">
   </PIN>
   <PIN pinname="Size" slicecount="1" values="10">
   </PIN>
   </NODE>
   <PACK Name="dx11" Version="1.3.1">
   </PACK>
   <PACK Name="addonpack" Version="36.0.0">
   </PACK>
   <NODE nodename="IOBox (String)" componentmode="InABox" id="17" systemname="IOBox (String)">
   <BOUNDS type="Node" left="250" top="1160" width="4760" height="560">
   </BOUNDS>
   <BOUNDS type="Box" left="250" top="1160" width="7880" height="1230">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="1" visible="0" values="|while debug mode shows that one Join or Split node is of course not as cheap as most native nodes, the difference is obvious with any not delphi type: vvvv has to copy pin data from delphi to .net (for plugins and vl) and back with every pin.&cr;&lf;already a minimal node like cons means: copy delphi pin to c# pin - evaluate node - copy result from c# to delphi - and this goes on for any node you connect.|">
   </PIN>
   <PIN pinname="Output String" slicecount="1" visible="0" values="||">
   </PIN>
   <PIN pinname="Size" slicecount="1" values="8">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (String)" componentmode="InABox" id="20" systemname="IOBox (String)">
   <BOUNDS type="Node" left="252" top="2488" width="4760" height="560">
   </BOUNDS>
   <BOUNDS type="Box" left="252" top="2488" width="7800" height="352">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="1" visible="0" values="|struct copies the data directly from the join input pin to the split output|">
   </PIN>
   <PIN pinname="Output String" slicecount="1" visible="0" values="||">
   </PIN>
   <PIN pinname="Size" slicecount="1" values="10">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (String)" componentmode="InABox" id="21" systemname="IOBox (String)">
   <BOUNDS type="Node" left="236" top="2984" width="4760" height="560">
   </BOUNDS>
   <BOUNDS type="Box" left="236" top="2984" width="8460" height="1670">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="1" visible="0" values="|in between it just hands around a references of the input pins. only when a Split or a Get Node request the data, one copy from delphi to c# is executed (on Join or Set) and then one to each Split or Get output.&cr;&lf;&cr;&lf;the effect becomes evident, once you start moving higher spreadcounts around.&cr;&lf;&cr;&lf;in debug mode (Ctrl+F9) you&apos;ll see below, that the cost lies mostly in the split, which does the copying, while cons and joins are very cheap.|">
   </PIN>
   <PIN pinname="Output String" slicecount="1" visible="0" values="||">
   </PIN>
   <PIN pinname="Size" slicecount="1" values="8">
   </PIN>
   </NODE>
   <NODE systemname="Cons (Struct)" filename="%VVVV%\packs\struct\nodes\Struct.Nodes.dll" nodename="Cons (Struct)" componentmode="Hidden" id="30">
   <BOUNDS type="Node" left="570" top="7460" width="500" height="270">
   </BOUNDS>
   <BOUNDS type="Box" left="570" top="7460" width="1600" height="1600">
   </BOUNDS>
   <BOUNDS type="Window" left="7048" top="9112" width="3392" height="2912">
   </BOUNDS>
   <PIN pinname="Input 1" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Input 2" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Input Count" slicecount="1" values="2">
   </PIN>
   <PIN pinname="Input 3" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Input 4" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="Unzip (Value Bin)" filename="%VVVV%\lib\nodes\plugins\VVVV.Nodes.dll" nodename="Unzip (Value Bin)" componentmode="Hidden" id="51">
   <BOUNDS type="Node" left="4436" top="8904" width="1040" height="270">
   </BOUNDS>
   <BOUNDS type="Box" left="4436" top="8904" width="1600" height="1600">
   </BOUNDS>
   <PIN pinname="Input Bin Size" visible="1" slicecount="1" values="-2">
   </PIN>
   <PIN pinname="Output 1" visible="1">
   </PIN>
   <PIN pinname="Output 2" visible="1">
   </PIN>
   <PIN pinname="Output Count" slicecount="1" values="3">
   </PIN>
   <PIN pinname="Output 3" visible="1">
   </PIN>
   <PIN pinname="Output 1 Bin Size" visible="-1" pintype="Output">
   </PIN>
   <PIN pinname="Output 2 Bin Size" visible="-1" pintype="Output">
   </PIN>
   <PIN pinname="Output 3 Bin Size" visible="-1" pintype="Output">
   </PIN>
   </NODE>
   <NODE systemname="RandomSpread (Spreads)" nodename="RandomSpread (Spreads)" componentmode="Hidden" id="52" hiddenwhenlocked="1">
   <BOUNDS type="Node" left="3180" top="5986" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Spread Count" slicecount="1" visible="1" values="500">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   <PIN pinname="Random Seed" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="Join (Struct)" filename="%VVVV%\packs\struct\nodes\Struct.Nodes.dll" nodename="Join (Struct)" componentmode="Hidden" id="57">
   <BOUNDS type="Node" left="556" top="6588" width="100" height="100">
   </BOUNDS>
   <BOUNDS type="Box" left="556" top="6588" width="1600" height="1600">
   </BOUNDS>
   <BOUNDS type="Window" left="4096" top="8368" width="3392" height="2912">
   </BOUNDS>
   <PIN pinname="Descriptive Name" slicecount="1" values="PerfDemo">
   </PIN>
   <PIN pinname="Cache" slicecount="1" values="|PerfDemo{double DoubleIn;}|">
   </PIN>
   <PIN pinname="DoubleIn" visible="1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="52" srcpinname="Output" dstnodeid="57" dstpinname="DoubleIn" hiddenwhenlocked="1">
   </LINK>
   <LINK srcnodeid="57" srcpinname="Output" dstnodeid="30" dstpinname="Input 1">
   </LINK>
   <NODE systemname="Join (Struct)" filename="%VVVV%\packs\struct\nodes\Struct.Nodes.dll" nodename="Join (Struct)" componentmode="Hidden" id="58">
   <BOUNDS type="Node" left="998" top="7012" width="100" height="100">
   </BOUNDS>
   <BOUNDS type="Box" left="998" top="7012" width="1600" height="1600">
   </BOUNDS>
   <BOUNDS type="Window" left="4096" top="8368" width="3392" height="2912">
   </BOUNDS>
   <PIN pinname="Descriptive Name" slicecount="1" values="PerfDemo">
   </PIN>
   <PIN pinname="Cache" slicecount="1" values="|PerfDemo{double DoubleIn;}|">
   </PIN>
   <PIN pinname="DoubleIn" visible="1" slicecount="1" values="0">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="Split (Struct)" filename="%VVVV%\packs\struct\nodes\Struct.Nodes.dll" nodename="Split (Struct)" componentmode="Hidden" id="60">
   <BOUNDS type="Node" left="560" top="8936" width="100" height="100">
   </BOUNDS>
   <BOUNDS type="Box" left="560" top="8936" width="1600" height="1600">
   </BOUNDS>
   <BOUNDS type="Window" left="6168" top="10104" width="3392" height="2912">
   </BOUNDS>
   <PIN pinname="Descriptive Name" slicecount="1" values="PerfDemo">
   </PIN>
   <PIN pinname="Cache" slicecount="1" values="|PerfDemo{double DoubleIn;}|">
   </PIN>
   <PIN pinname="Input" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Last" slicecount="1" visible="1" values="0">
   </PIN>
   <PIN pinname="DoubleIn" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="FrameCounter (Animation)" nodename="FrameCounter (Animation)" componentmode="Hidden" id="64" hiddenwhenlocked="1">
   <BOUNDS type="Node" left="3954" top="4616" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Frame Count" visible="1">
   </PIN>
   <PIN pinname="Enable" slicecount="1" values="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="64" srcpinname="Frame Count" dstnodeid="52" dstpinname="Random Seed" hiddenwhenlocked="1">
   </LINK>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="68" hiddenwhenlocked="1">
   <BOUNDS type="Box" left="4492" top="5256" width="696" height="208">
   </BOUNDS>
   <BOUNDS type="Node" left="4492" top="5256" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Y Input Value" slicecount="1" visible="1" values="5000">
   </PIN>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Value Type" slicecount="1" values="Integer">
   </PIN>
   <PIN pinname="Y Output Value" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="Cons (Spreads)" filename="%VVVV%\lib\nodes\plugins\VVVV.Nodes.dll" nodename="Cons (Spreads)" componentmode="Hidden" id="69">
   <BOUNDS type="Node" left="4430" top="7460" width="456" height="256">
   </BOUNDS>
   <BOUNDS type="Box" left="4430" top="7460" width="1600" height="1600">
   </BOUNDS>
   <PIN pinname="Output Bin Size" visible="1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   <PIN pinname="Input Count" slicecount="1" values="2">
   </PIN>
   </NODE>
   <LINK srcnodeid="58" srcpinname="Output" dstnodeid="30" dstpinname="Input 2">
   </LINK>
   <LINK srcnodeid="52" srcpinname="Output" dstnodeid="58" dstpinname="DoubleIn" hiddenwhenlocked="1">
   </LINK>
   <LINK srcnodeid="52" srcpinname="Output" dstnodeid="69" dstpinname="Input 1" hiddenwhenlocked="1">
   </LINK>
   <LINK srcnodeid="52" srcpinname="Output" dstnodeid="69" dstpinname="Input 2" hiddenwhenlocked="1">
   </LINK>
   <NODE systemname="Mod (Value)" nodename="Mod (Value)" componentmode="Hidden" id="77" hiddenwhenlocked="1">
   <BOUNDS type="Node" left="4220" top="4928" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Input 1" visible="1">
   </PIN>
   <PIN pinname="Input 2" slicecount="1" values="5">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="64" srcpinname="Frame Count" dstnodeid="77" dstpinname="Input 1" hiddenwhenlocked="1">
   </LINK>
   <NODE systemname="Add (Value)" nodename="Add (Value)" componentmode="Hidden" id="78" hiddenwhenlocked="1">
   <BOUNDS type="Node" left="4220" top="5512" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Input 2" visible="1">
   </PIN>
   <PIN pinname="Input 1" visible="1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="78" srcpinname="Output" dstnodeid="52" dstpinname="Spread Count" hiddenwhenlocked="1">
   </LINK>
   <LINK srcnodeid="78" srcpinname="Output" dstnodeid="51" dstpinname="Input Bin Size" hiddenwhenlocked="1">
   <LINKPOINT x="5430" y="6780">
   </LINKPOINT>
   </LINK>
   <LINK srcnodeid="68" srcpinname="Y Output Value" dstnodeid="78" dstpinname="Input 2" hiddenwhenlocked="1">
   </LINK>
   <LINK srcnodeid="77" srcpinname="Output" dstnodeid="78" dstpinname="Input 1" hiddenwhenlocked="1">
   </LINK>
   <NODE systemname="EQ (Value)" nodename="EQ (Value)" componentmode="Hidden" id="88">
   <BOUNDS type="Node" left="564" top="10000" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Input 2" visible="1">
   </PIN>
   <PIN pinname="Input 1" visible="1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="60" srcpinname="DoubleIn" dstnodeid="88" dstpinname="Input 1">
   </LINK>
   <NODE systemname="AND (Boolean Spectral)" nodename="AND (Boolean Spectral)" componentmode="Hidden" id="89">
   <BOUNDS type="Node" left="564" top="10384" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Input" visible="1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="88" srcpinname="Output" dstnodeid="89" dstpinname="Input">
   </LINK>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="90">
   <BOUNDS type="Box" left="564" top="10728" width="480" height="480">
   </BOUNDS>
   <BOUNDS type="Node" left="564" top="10728" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Value Type" slicecount="1" values="Boolean">
   </PIN>
   <PIN pinname="Behavior" slicecount="1" values="Toggle">
   </PIN>
   </NODE>
   <LINK srcnodeid="89" srcpinname="Output" dstnodeid="90" dstpinname="Y Input Value">
   </LINK>
   <LINK srcnodeid="51" srcpinname="Output 1" dstnodeid="88" dstpinname="Input 2" linkstyle="VHV">
   <LINKPOINT x="4470" y="9740">
   </LINKPOINT>
   <LINKPOINT x="790" y="9740">
   </LINKPOINT>
   </LINK>
   <NODE systemname="Split (Struct)" filename="%VVVV%\packs\struct\nodes\Struct.Nodes.dll" nodename="Split (Struct)" componentmode="Hidden" id="92">
   <BOUNDS type="Node" left="2302" top="8926" width="100" height="100">
   </BOUNDS>
   <BOUNDS type="Box" left="2302" top="8926" width="1600" height="1600">
   </BOUNDS>
   <BOUNDS type="Window" left="6168" top="10104" width="3392" height="2912">
   </BOUNDS>
   <PIN pinname="Descriptive Name" slicecount="1" values="PerfDemo">
   </PIN>
   <PIN pinname="Cache" slicecount="1" values="|PerfDemo{double DoubleIn;}|">
   </PIN>
   <PIN pinname="Input" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Last" slicecount="1" visible="1" values="1">
   </PIN>
   <PIN pinname="DoubleIn" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="EQ (Value)" nodename="EQ (Value)" componentmode="Hidden" id="95">
   <BOUNDS type="Node" left="1280" top="9990" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Input 2" visible="1">
   </PIN>
   <PIN pinname="Input 1" visible="1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="AND (Boolean Spectral)" nodename="AND (Boolean Spectral)" componentmode="Hidden" id="94">
   <BOUNDS type="Node" left="1280" top="10374" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Input" visible="1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="95" srcpinname="Output" dstnodeid="94" dstpinname="Input">
   </LINK>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="93">
   <BOUNDS type="Box" left="1280" top="10718" width="480" height="480">
   </BOUNDS>
   <BOUNDS type="Node" left="1280" top="10718" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Value Type" slicecount="1" values="Boolean">
   </PIN>
   <PIN pinname="Behavior" slicecount="1" values="Toggle">
   </PIN>
   </NODE>
   <LINK srcnodeid="94" srcpinname="Output" dstnodeid="93" dstpinname="Y Input Value">
   </LINK>
   <LINK srcnodeid="92" srcpinname="DoubleIn" dstnodeid="95" dstpinname="Input 1">
   </LINK>
   <NODE systemname="Cons (Spreads)" filename="%VVVV%\lib\nodes\plugins\VVVV.Nodes.dll" nodename="Cons (Spreads)" componentmode="Hidden" id="96">
   <BOUNDS type="Node" left="4430" top="7920" width="752" height="256">
   </BOUNDS>
   <BOUNDS type="Box" left="4430" top="7920" width="1600" height="1600">
   </BOUNDS>
   <PIN pinname="Output Bin Size" visible="1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   <PIN pinname="Input Count" slicecount="1" values="2">
   </PIN>
   </NODE>
   <LINK srcnodeid="69" srcpinname="Output" dstnodeid="96" dstpinname="Input 1">
   </LINK>
   <LINK srcnodeid="52" srcpinname="Output" dstnodeid="96" dstpinname="Input 2" hiddenwhenlocked="1">
   </LINK>
   <LINK srcnodeid="96" srcpinname="Output" dstnodeid="51" dstpinname="Input">
   </LINK>
   <LINK srcnodeid="51" srcpinname="Output 3" dstnodeid="95" dstpinname="Input 2" linkstyle="VHV">
   <LINKPOINT x="4960" y="9960">
   </LINKPOINT>
   <LINKPOINT x="1510" y="9960">
   </LINKPOINT>
   </LINK>
   <NODE systemname="Join (Struct)" filename="%VVVV%\packs\struct\nodes\Struct.Nodes.dll" nodename="Join (Struct)" componentmode="Hidden" id="98">
   <BOUNDS type="Node" left="1130" top="7460" width="100" height="100">
   </BOUNDS>
   <BOUNDS type="Box" left="1130" top="7460" width="1600" height="1600">
   </BOUNDS>
   <BOUNDS type="Window" left="4096" top="8368" width="3392" height="2912">
   </BOUNDS>
   <PIN pinname="Descriptive Name" slicecount="1" values="PerfDemo">
   </PIN>
   <PIN pinname="Cache" slicecount="1" values="|PerfDemo{double DoubleIn;}|">
   </PIN>
   <PIN pinname="DoubleIn" visible="1" slicecount="1" values="0">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="Cons (Struct)" filename="%VVVV%\packs\struct\nodes\Struct.Nodes.dll" nodename="Cons (Struct)" componentmode="Hidden" id="99">
   <BOUNDS type="Node" left="570" top="7920" width="630" height="270">
   </BOUNDS>
   <BOUNDS type="Box" left="570" top="7920" width="1600" height="1600">
   </BOUNDS>
   <BOUNDS type="Window" left="7048" top="9112" width="3392" height="2912">
   </BOUNDS>
   <PIN pinname="Input 1" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Input 2" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Input Count" slicecount="1" values="2">
   </PIN>
   <PIN pinname="Input 3" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Input 4" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="98" srcpinname="Output" dstnodeid="99" dstpinname="Input 2">
   </LINK>
   <LINK srcnodeid="30" srcpinname="Output" dstnodeid="99" dstpinname="Input 1">
   </LINK>
   <LINK srcnodeid="99" srcpinname="Output" dstnodeid="60" dstpinname="Input">
   </LINK>
   <LINK srcnodeid="99" srcpinname="Output" dstnodeid="92" dstpinname="Input">
   </LINK>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="100">
   <BOUNDS type="Box" left="3870" top="8324" width="480" height="480">
   </BOUNDS>
   <BOUNDS type="Node" left="3870" top="8324" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Y Input Value" slicecount="1" visible="1" values="1">
   </PIN>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Value Type" slicecount="1" values="Boolean">
   </PIN>
   <PIN pinname="Behavior" slicecount="1" values="Toggle">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="Last">
   </PIN>
   </NODE>
   <LINK srcnodeid="100" srcpinname="Y Output Value" dstnodeid="92" dstpinname="Last">
   </LINK>
   <LINK srcnodeid="52" srcpinname="Output" dstnodeid="98" dstpinname="DoubleIn" hiddenwhenlocked="1">
   </LINK>
   <NODE nodename="IOBox (String)" componentmode="InABox" id="101" systemname="IOBox (String)">
   <BOUNDS type="Node" left="5866" top="6544" width="4760" height="560">
   </BOUNDS>
   <BOUNDS type="Box" left="5866" top="6544" width="2560" height="3992">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="1" visible="0" values="|all the &apos;magic&apos; the system does in the background is optimized the way, that most heavy calculations happen on user changing something, means, while you patch. during pure runtime, the only thing happening is transfering data|">
   </PIN>
   <PIN pinname="Output String" slicecount="1" visible="0" values="||">
   </PIN>
   <PIN pinname="Size" slicecount="1" values="8">
   </PIN>
   </NODE>
   </PATCH>